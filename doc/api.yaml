swagger: '2.0'
info:
  title: Virtual Cluster REST API
  description:  Comet REST API Specification. 
  version: "1.0.1"
host: comet.sdsc.edu
schemes:
  - https
basePath: /
produces:
  - application/json
paths:
  /cluster:
    get:
      summary: v1.0 The list of the clusters
      description: |
        The list of the clusters.
      parameters:
        - name: username
          in: query
          description: The user to which the clustes belong.
          required: false
          type: string
        - name: project
          in: query
          description: The project to which the clustes belong.
          required: false
          type: string
        - name: starttime
          in: query
          description: The start time of from which to search.
          required: false
          type: string
        - name: endtime
          in: query
          description: The end time from which to search.
          required: false
          type: string
      tags:
        - Cluster
        - v1.0
      responses:
        200:
          description: An array of clusters
          schema:
            type: array
            items:
              $ref: '#/definitions/Clusters'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /cluster/{cluster_name}:
    tags:
    - Cluster
    get:
      summary: return information about a cluster
      description: return information about a cluster
      parameters:
        - name: cluster_name
          in: path
          required: true
          description: The cluster name
      responses:
        200:
          description: An array of projects
          schema:
            type: array
            items:
              $ref: '#/definitions/ComputeMaster'
          schema:
            type: array
            items:
              $ref: '#/definitions/ComputeServer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Remove the cluster
      parameters:
        - name: cluster_name
          in: path
          required: true
          description: The cluster name
    put:
      summary: update the parameters of existed cluster
  /project:
    tags:
    - Project
    get:
      summary: The list of all projects that are allowed to create clusters
      description: |
        The list of projects that are allowed to create clusters. 
      responses:
        200:
          description: An array of projects
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user:
    get:
      summary: User Profile
      description: The User profile contains information about the user that manages the cluster.
      tags:
        - User
      parameters:
        - name: username
          in: query
          description: Return the profile of the user.
          required: true
          type: string
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary:  Create a new cluster
  /cluster/{cluster_name}/start:
    post:
      summary: Starts the cluster
      parameters:
        - name: cluster_name
          in: path
          required: true
          description: The cluster name
  /cluster/{cluster_name}/stop:
    post:
      summary: Stops the cluster
      parameters:
        - name: cluster_name
          in: path
          required: true
          description: The cluster name
  /cluster/{cluster_name}/compute/{compute_name}:
    get:
      summary: Retrieve a summarized list of all defined Virtual Machines
    post:
      summary: Create a new Virtual Machine
      parameters:
        - name: vm_name
          in: path
          required: false
          description: The name of the VM. Used to identify the VM in this API. If omitted, a name will be chosen based on the template used.
  /cluster/{cluster_name}/compute/{compute_name}:
    get: 
      summary: Retrieve the full description of a Virtual Machine
      responses:
        "200":
          description: Full description of a Virtual Machine
          schema:
            $ref: VM
    delete:
      summary: Remove the Virtual Machine
  /cluster/{cluster_name}/compute/{compute_name}/start:
    post:
      summary: Power on a VM
  /cluster/{cluster_name}/compute/{compute_name}/poweroff:
    post:
      summary: Power off a VM forcefully. Note this action may produce undesirable results, for example unflushed disk cache in the guest.
  /cluster/{cluster_name}/compute/{compute_name}/shutdown:
    post:
      summary: Shut down a VM graceful. This action issue shutdown request to guest. And the guest will react this request. Note the guest OS may ignore the request.
  /cluster/{cluster_name}/compute/{compute_name}/reset:
    post:
      summary: Reset a VM immediately without the guest OS shutdown. It emulates the power reset button on a machine. Note that there is a risk of data loss caused by reset without the guest OS shutdown.
  /cluster/{cluster_name}/compute/{compute_name}/stop:
    post:
      summary: Shutdown a VM. When done, sync back the VM image to storage and remove the image from the host.
  /cluster/{cluster_name}/compute/{compute_name}/console:
    get:
      summary: Redirect to the location of VM console
      responses:
        "302":
          description: Redirects to the console location
  /cluster/{cluster_name}/compute/{compute_name}/storages:
    get:
      summary: Retrieve a summarized list of all storages of specified guest
  /cluster/{cluster_name}/compute/{compute_name}/storages/{image_name}/map_zvol:
    put:
      summary: Map zvol to the compute node
      parameters:
        - name: nas
          in: query
          required: true
          description: NAS
        - name: zpool
          in: query
          required: true
          description: ZPOOL
        - name: zvol
          in: query
          required: true
          description: ZVOL
        - name: hosting
          in: query
          required: true
          description: Where to map to
        - name: size
          in: query
          required: false
          description: Volume size

  /cluster/{cluster_name}/compute/{compute_name}/storages/{zvol}:
    get:
      summary: Retrieve zvol status
      responses:
        "200":
          description: Full description of a zvol status
          schema:
            $ref: ZVOL
  /cluster/{cluster_name}/compute/{compute_name}/snapshots:
    get:
      summary: Retrieve a list of VM snapshots
definitions:
  Clusters:
    type: array
    items:
      type: string
      description: cluster_id
  VM:
    type: object
    properties:
      name: 
        type: string
        description: The name of the VM. Used to identify the VM in this API
      state:
        type: string
        enum:
          running: The VM is powered on
          paused: The VMs virtual CPUs are paused
          shutoff: The VM is powered off
        description: Indicates the current state in the VM lifecycle 
      memory: 
        type: integer
        format: int32
        description: The amount of memory assigned to the VM (in MB)
      cpus: 
        type: integer
        format: int32
        description: The number of CPUs assigned to the VM
      screenshot: 
        type: string
        description: A link to a recent capture of the screen in PNG format
  ZVOL:
    type: object
    properties:
      name: 
        type: string
        description: The name of the zvol
      host: 
        type: string
        description: The host which zvol is attached to
      zpool: 
        type: string
        description: The name of nas zpool storing the zvol
      target: 
        type: string
        description: iSCSI target for this zvol if exists
      state:
        type: string
        enum:
          NAS<-VM: Sync from VM to NAS
          NAS->VM: Sync from NAS to VM
          mapped: Mapped to a compute node
          unmapped: Unmapped
  ComputeMaster:
    tags:
    - Compute
    type: object
    properties:
      name:
        type: string
        description: the compute resource name.
  ComputeServer:
    tags:
    - Compute
    type: object
    properties:
      name:
        type: string
        description: the compute resource name.
  StoragePool:
    tags:
    - Storage
    type: object
    properties:
      name:
        type: string
        description: the storage pool name.
  StorageVolume:
    tags:
    - Storage
    type: object
    properties:
      name:
        type: string
        description: the storage volume name.
  StorageServer:
    tags:
    - Storage
    type: object
    properties:
      name:
        type: string
        description: the storage server name.
  StorageTarget:
    tags:
    - Storage
    type: object
    properties:
      name:
        type: string
        description: the storage target name.
  Project:
    tags:
    - Project
    type: object
    properties:
      name:
        type: string
        description: the project name.
  Profile:
    tags:
    - User
    type: object
    properties:
      username:
        type: string
        description: username of the user.
      firstname:
        type: string
        description: First name of the user.
      lastname:
        type: string
        description: Last name of the user.
      email:
        type: string
        description: Email address of the user.
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
