<?xml version="1.0" standalone="no"?>

<kickstart interface="public">
	<description>
		Packages and configuration for the Nucleus service server.
	</description>

	<copyright>
	Copyright (c) 2000 - 2014 The Regents of the University of California.
	All rights reserved. Rocks(r) 6.2 www.rocksclusters.org

	</copyright>

	<package>nucleus-service</package>
    <package>Django</package>
    <package>django-rest-auth</package>
    <package>djangorestframework</package>
    <package>djangorestframework-httpsignature</package>
    <package>django-rest-swagger</package>
    <package>docopts</package>
    <package>drf-nested-routers</package>
    <package>MySQL-python</package>
    <package>amqp</package>
    <package>M2Crypto</package>
    <package>celery</package>
    <package>kombu</package>
    <package>anyjson</package>
    <package>billiard</package>
    <package>httpsig</package>
    <package>pycrypto</package>
    <package>PyYAML</package>

    <package disable="1">httpd</package>
    <package>httpd24u</package>
    <package>mod_wsgi</package>

    <package>mysql-community-server</package>

<post>

<!-- Enable Services -->
/sbin/chkconfig httpd on
/sbin/chkconfig celeryd on

<!-- Apache configuration for nucleus-service -->
<file name="/etc/httpd/conf.d/nucleus.conf">
LoadModule wsgi_module /opt/python/lib/python2.7/site-packages/mod_wsgi/server/mod_wsgi-py27.so

WSGIScriptAlias /nucleus /opt/python/lib/python2.7/site-packages/nucleus_service/nucleus/wsgi.py
WSGIApplicationGroup %{GLOBAL}
WSGIDaemonProcess nucleus_service_app python-path=/opt/python/lib/site-packages/django:/opt/python/lib/python2.7/site-packages/nucleus_service
WSGISocketPrefix /var/run/wsgi
WSGIProcessGroup nucleus_service_app
WSGIPassAuthorization On

&lt;Directory /opt/python/lib/python2.7/site-packages/nucleus_service&gt;
&lt;Files wsgi.py&gt;
    Options All
    Require all granted
&lt;/Files&gt;
&lt;/Directory&gt;


# The Django static files
Alias /static/ /var/www/html/static/
&lt;Location /static&gt;
Order deny,allow
Allow from all
&lt;/Location&gt;
</file>

<!-- MySQL Community Server configuration files -->
<file name="/root/.mysqld.my.cnf" perms="600" mode="append" rcs="false">
[client]
host        = 127.0.0.1
port        = 3306
user        = root
</file>

<file name="/opt/rocks/etc/.nucleus.my.cnf" perms="600" mode="append" rcs="false">
[client]
host        = 127.0.0.1
port        = 3306
user        = nucleus
database    = comet-nucleus
</file>

<!-- Post-install configuration for MySQL Community Server -->
<file name="/etc/rc.d/rocksconfig.d/post-98-setup-mysql" perms="700" rcs="false">
#!/bin/bash -l
service mysqld start

# we need a password which contains a symbol from each group, otherwise MySQL won't accept one

while [[ $MYSQL_NUCLEUS_PASS != *[_\(\)\[\]/*+^%!]*  ]] || [[ $MYSQL_NUCLEUS_PASS != *[0-9]*  ]] || [[ $MYSQL_NUCLEUS_PASS != *[a-z]*  ]] || [[ $MYSQL_NUCLEUS_PASS != *[A-Z]*  ]]
do
    MYSQL_NUCLEUS_PASS=$(&lt; /dev/urandom tr -dc '_()[]/*+^%!A-Z-a-z-0-9' | head -c26)
done

while [[ $MYSQL_ROOT_PASS != *[_\(\)\[\]/*+^%!]*  ]] || [[ $MYSQL_ROOT_PASS != *[0-9]*  ]] || [[ $MYSQL_ROOT_PASS != *[a-z]*  ]] || [[ $MYSQL_ROOT_PASS != *[A-Z]*  ]]
do
    MYSQL_ROOT_PASS=$(&lt; /dev/urandom tr -dc '_()[]/*+^%!A-Z-a-z-0-9' | head -c26)
done

while [[ $DJANGO_ADMIN_PASS != *[_\(\)\[\]/*+^%!]*  ]] || [[ $DJANGO_ADMIN_PASS != *[0-9]*  ]] || [[ $DJANGO_ADMIN_PASS != *[a-z]*  ]] || [[ $DJANGO_ADMIN_PASS != *[A-Z]*  ]]
do
    DJANGO_ADMIN_PASS=$(&lt; /dev/urandom tr -dc '_()[]/*+^%!A-Z-a-z-0-9' | head -c26)
done


echo "password = $MYSQL_ROOT_PASS" >> /root/.mysqld.my.cnf
echo $DJANGO_ADMIN_PASS >> /root/.django_admin
echo "password = $MYSQL_NUCLEUS_PASS" >> /opt/rocks/etc/.nucleus.my.cnf

MYSQL_TEMP_PASS=`grep "A temporary password is generated for root@localhost:" /var/log/mysqld.log | sed 's/ /\n/g' | tail -n 1 | tr -d '\n'`

SECURE_MYSQL=$(expect -c "
set timeout 10
spawn mysql_secure_installation
expect \"Enter password for user root\"
send \"$MYSQL_TEMP_PASS\r\"
expect \"New password:\"
send \"$MYSQL_ROOT_PASS\r\"
expect \"Re-enter new password:\"
send \"$MYSQL_ROOT_PASS\r\"
expect \"Change the password for root ?\"
send \"n\r\"
expect \"Remove anonymous users?\"
send \"y\r\"
expect \"Disallow root login remotely?\"
send \"y\r\"
expect \"Remove test database and access to it?\"
send \"y\r\"
expect \"Reload privilege tables now?\"
send \"y\r\"
expect eof
")

/usr/bin/mysql --defaults-extra-file=/root/.mysqld.my.cnf -e "CREATE DATABASE \`comet-nucleus\`;"

# Add nucleus user to MySQL Grant tables
/usr/bin/mysql --defaults-extra-file=/root/.mysqld.my.cnf -e "GRANT ALL ON \`comet-nucleus\`.* TO 'nucleus'@'localhost' IDENTIFIED BY '$MYSQL_NUCLEUS_PASS' WITH GRANT OPTION;"
/usr/bin/mysql --defaults-extra-file=/root/.mysqld.my.cnf -e "GRANT ALL ON \`comet-nucleus\`.* TO nucleus@'%' IDENTIFIED BY '$MYSQL_NUCLEUS_PASS';"
/usr/bin/mysql --defaults-extra-file=/root/.mysqld.my.cnf -e "FLUSH PRIVILEGES;"

module load python
cd /opt/python/lib/python2.7/site-packages/nucleus_service
python manage.py collectstatic --noinput
python manage.py makemigrations
python manage.py migrate

echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'dmishin@sdsc.edu', '$DJANGO_ADMIN_PASS')" | python manage.py shell

rm /etc/rc.d/rocksconfig.d/post-98-setup-mysql
</file>

</post>

</kickstart>
